import React, { useRef, useCallback } from "react";
import anime from "animejs";

import image from "/src/assets/svg-12/image.jpg";

import "./svg-12.scss";

const Svg12 = () => {
  const mask = useRef(null);

  const paintPreview = useCallback(() => {
    if (!mask.current) return;

    const maskPaths = mask.current.querySelectorAll("path");
    anime({
      targets: maskPaths,
      strokeDashoffset: [anime.setDashoffset, 0],
      /*
        Добавим анимацию opacity. Контурам в маске выставим по умолчанию opacity: 0 в стилях,
        чтобы изначальное состояние превью было без маски.

        ОБРАТИ ВНИМАНИЕ НА КОД ИЗ ГАЙДА В САМОМ НИЗУ!
      */
      opacity: [0, 1],
      duration: 2000,
      easing: "easeInOutQuad",
    });
  }, []);

  const resetPainting = useCallback(() => {
    if (!mask.current) return;

    const maskPaths = mask.current.querySelectorAll("path");

    anime({
      targets: maskPaths,
      strokeDashoffset: [0, anime.setDashoffset],
      opacity: [1, 0],
      duration: 2000,
      easing: "easeInOutQuad",
    });
  }, []);

  return (
    <div className="svg-12">
      {/*
        Сначала создадим маску — в ней будут заранее подготовленные в Фигме контуры.
        Чтобы маска не мешала нам на странице, обернём её в <div> с классом visually-hidden.

        Маска отображается частично, потому что в разметке она стоит отдельно от блока preview. И по дефолту элемент SVG, в котором находится маска, имеет размеры 300 x 150. Эту область мы и видим.

        Чтобы исправить это поведение, зададим маске размеры через CSS.
      */}
      <div className="visually-hidden">
        <svg className="mask-wrapper">
          <defs>
            <mask
              ref={mask}
              id="mask"
              x="0"
              y="0"
              width="100%"
              height="100%"
              maskUnits="userSpaceOnUse"
            >
              <g fill="#ffffff">
                <rect x="0" y="0" width="100%" height="100%"></rect>
                <path
                  d="M80.9724 57.5342C110.289 57.5342 139.9 56.6567 166.751 68.8762C169.181 69.9819 177.701 73.455 175.018 77.3657C173.301 79.8688 167.67 83.0377 165.614 84.1573C153.415 90.7982 140.291 96.1035 127.009 100.729C110.346 106.532 93.1956 111.684 76.0426 116.214C73.6361 116.849 66.5838 116.418 70.3543 119.338C94.4804 138.023 123.701 153.078 154.692 160.087C160.697 161.445 166.882 161.457 172.894 162.668C180.629 164.227 182.124 170.735 183.892 177.066C187.892 191.394 188.433 207.004 179.417 219.989C173.487 228.53 164.164 235.569 156.512 242.877C154.646 244.66 149.771 248.021 155.299 248.921C169.387 251.215 184.941 249.472 199.212 250.28C218.491 251.371 238.693 252.67 256.626 259.652C259.546 260.789 265.558 262.61 267.168 265.493C272.082 274.294 206.155 282.04 198.226 283.287C168.996 287.884 143.493 297.077 116.315 306.922C104.897 311.058 62.9237 307.508 71.3403 289.331C82.1542 265.977 100.396 247.519 120.866 230.856C128.647 224.522 136.076 218.02 145.136 213.062C151.362 209.655 157.372 205.89 163.717 202.671C165.835 201.596 166.725 201.722 162.883 200.633C146.185 195.901 128.246 193.268 111.158 190.106C82.9285 184.883 54.0058 178.56 25 178.56"
                  stroke="black"
                  strokeWidth="50"
                  strokeLinecap="round"
                />
                <path
                  d="M501.448 72.204C545.693 73.6065 591.927 74.7627 635.539 81.9839C641.885 83.0347 648.227 84.9939 654.651 85.6513C659.409 86.1382 645.917 89.2583 641.303 90.4054C589.907 103.184 534.734 113.03 481.122 107.928C476.268 107.466 469.627 107.611 464.891 106.434C462.712 105.892 469.324 105.611 471.565 105.347C480.138 104.338 494.848 102.849 502.813 102.359C563.164 98.6457 624.478 105.285 674.977 136.996C681.608 141.159 687.759 145.191 694.848 148.677C701.2 151.802 693.895 152.989 689.084 153.975C660.573 159.818 631.102 160.077 602.016 160.223C550.641 160.48 499.273 159.523 447.902 159.272C412.417 159.099 377.775 163.357 342.48 165.113C295.275 167.461 437.042 164.862 484.307 163.89C550.294 162.534 619.462 157.778 684.989 167.965C689.309 168.637 694.074 168.145 697.123 171.497C700.277 174.963 688.517 177.594 688.022 177.745C647.613 190.095 605.28 198.624 563.791 207.357C519.518 216.675 474.398 226.796 428.941 230.312C418.231 231.141 404.001 232.818 393.143 231.127C391.906 230.935 394.913 229.476 396.025 228.954C400.961 226.639 413.333 221.5 417.262 219.989C448.08 208.133 480.213 198.58 513.279 193.23C575.17 183.216 637.47 190.484 695.758 210.888C700.278 212.471 705.039 213.861 708.652 216.865C709.045 217.192 710.226 217.807 709.713 217.952C701.8 220.189 687.103 219.282 679.907 219.514C648.649 220.521 617.29 221.692 586.013 220.736C545.837 219.508 506.01 215.35 466.105 211.296C441.881 208.835 417.195 204.233 392.764 204.233C390.369 204.233 388.496 204.121 391.854 205.863C405.641 213.01 422.62 215.595 437.967 218.223C501.286 229.069 565.553 228.838 629.395 235.406C652.579 237.791 676.019 238.679 699.095 240.975C709.899 242.05 677.771 244.811 667.014 246.205C629.064 251.12 591.031 255.525 553.097 260.535C495.867 268.094 439.676 277.225 381.767 279.348C371.357 279.729 340.101 280.027 350.519 280.027C405.874 280.027 460.856 280.759 515.782 287.769C573.933 295.19 632.969 303.749 688.932 320.165C692.837 321.31 713.363 331.79 710.775 322.406C705.131 301.937 694.899 281.812 683.396 263.523C669.801 241.909 651.475 223.156 637.283 201.855C618.058 173.001 607.179 143.851 604.064 110.373C603.9 108.61 604.897 102.594 601.182 105.619C587.746 116.556 577.08 132.253 567.356 145.757C556.495 160.839 547.475 176.573 539.066 192.823C537.686 195.489 536.253 198.015 534.288 200.361C533.331 201.504 524.656 183.765 524.656 179.783"
                  stroke="black"
                  strokeWidth="50"
                  strokeLinecap="round"
                />
                <path
                  d="M392.233 409.61C385.634 410.065 378.792 411.983 372.211 410.358C346.284 403.953 399.298 356.731 402.7 353.444C430.434 326.65 460.288 299.487 494.47 279.212C501.697 274.925 509.59 271.507 516.692 267.055C517.368 266.631 518.944 266.296 518.588 265.629C516.832 262.34 510.446 266.143 506.453 266.851C450.125 276.838 394.28 290.63 340.356 308.28C311.557 317.706 283.441 328.057 258.294 343.868C249.919 349.134 251.887 343.949 256.474 337.484C280.538 303.563 317.915 277.159 347.182 246.884C356.245 237.509 365.127 228.187 375.396 219.853C377.562 218.096 378.695 216.439 373.728 217.001C350.698 219.605 326.626 228.506 305.469 236.017C261.257 251.714 223.186 274.124 181.996 294.697C176.802 297.291 168.729 299.915 164.021 303.73C163.596 304.074 162.986 304.379 162.883 304.884C162.499 306.775 166.513 302.821 168.192 301.624C203.634 276.364 235.794 247.488 270.884 221.755C302.14 198.834 332.468 175.541 357.421 146.912C359.843 144.133 360.527 143.905 354.767 146.504C328.334 158.431 302.761 171.937 276.648 184.401C245.835 199.109 214.69 212.44 182.602 224.743C165.794 231.188 148.429 237.01 132.242 244.711C116.011 252.432 141.617 239.104 142.254 238.802C171.247 225.064 200.5 212.377 228.563 197.034C262.655 178.394 294.845 157.442 327.615 137.064C338.791 130.114 350.283 123.595 362.199 117.708C363.454 117.088 364.297 117.087 361.138 116.757C348.928 115.481 335.543 115.286 323.368 116.349C282.718 119.901 244.018 138.092 209.527 156.624C196.205 163.781 184.25 171.906 172.212 180.53C142.452 201.85 232.329 138.561 262.845 118.115C299.296 93.6919 335.067 68.8997 370.542 43.4078C371.603 42.6453 374.923 40.7952 373.576 40.9628C363.64 42.1985 340.076 55.3647 334.441 57.9418C300.395 73.5115 266.397 89.3111 233.114 106.162C215.715 114.971 198.195 123.883 183.588 136.249C177.896 141.068 177.525 141.916 173.198 146.504C171.835 147.949 167.033 151.508 168.951 150.715C182.216 145.233 200.635 129.919 210.664 123.141C240.09 103.256 269.887 83.8305 299.401 64.0542C317.603 51.858 335.395 39.1991 353.629 27.04C368.494 17.1277 323.258 46.0778 307.744 55.1572C280.539 71.0789 268.829 77.3996 240.774 91.3564C221.851 100.771 202.176 108.825 184.726 120.424C175.268 126.711 166.473 133.91 157.422 140.663"
                  stroke="black"
                  strokeWidth="50"
                  strokeLinecap="round"
                />
              </g>
            </mask>
          </defs>
        </svg>
      </div>

      <div className="wrapper">
        <div
          className="preview"
          onMouseOver={() => paintPreview()}
          onMouseLeave={() => resetPainting()}
        >
          <img src={image} alt="Preview" />
          <span>HOVER ME</span>

          <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor">
            <rect
              x="0"
              y="0"
              width="100%"
              height="100%"
              fill="currentColor"
              mask="url(#mask)"
            />
          </svg>
        </div>
      </div>
    </div>
  );
};

export { Svg12 };

/*
  Из гайда должно работать, но не работает так как надо.

  const preview = document.querySelector('.preview');
const maskPaths = document.querySelectorAll('#mask path');

const resetPainting = () => {
  anime({
    targets: maskPaths,
    strokeDashoffset: anime.setDashoffset,
    opacity: 0,
    duration: 2000,
    easing: 'easeInOutQuad',
  })

  preview.removeEventListener('mouseleave', resetPainting);
}

const paintPreview = () => {
  anime({
    targets: maskPaths,
    opacity: [0, 1],
    strokeDashoffset: [anime.setDashoffset, 0],
    duration: 2000,
    easing: 'easeInOutQuad'
  })

  preview.addEventListener('mouseleave', resetPainting);
}

preview.addEventListener('mouseover', paintPreview);

*/
